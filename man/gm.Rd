% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gm.R
\name{gm}
\alias{gm}
\title{Graph Matching Methods}
\usage{
gm(A, B, seeds = NULL, similarity = NULL, method = "indefinite", ...)
}
\arguments{
\item{A}{A matrix, 'igraph' object, or list of either.}

\item{B}{A matrix, 'igraph' object, or list of either.}

\item{seeds}{A vector of integers or logicals, a matrix or a data frame. If
the seed pairs have the same indices in both graphs then seeds can be a
vector. If not, seeds must be  a matrix or a data frame, with the first
column being the indices of \eqn{G_1} and the second column being the
corresponding indices of \eqn{G_2}.}

\item{similarity}{A matrix. An \code{n-by-n} matrix containing vertex similarities.}

\item{method}{Choice for graph matching methods.}

\item{...}{Arguments passed to graph matching methods. Please refer to Details section
for more information.}
}
\value{
\code{graph_match_FW}, \code{graph_match_convex} and \code{graph_match_PATH}
  return an object of class "gm" which is a list containing the following
  components:

  \describe{
    \item{corr_A}{matching correspondence in \eqn{G_1}}
    \item{corr_B}{matching correspondence in \eqn{G_2}}
    \item{soft}{the doubly stochastic matrix from the last iteration with which one can
          extract more than one matching candidates}
    \item{iter}{number of iterations until convergence or reaches the \code{max_iter}}
    \item{max_iter}{Maximum number of replacing matches}
    \item{lap_method}{Choice for solving the LAP}
    \item{seeds}{a vector of logicals indicating if the corresponding vertex is a seed}
  }
}
\description{
\code{gm} is used to match a pair of given graphs, with specifications
  of the adjacency matrices of for a pair of graphs, possible prior knowledge, and
  a graph matching method.
}
\details{
aaa
}
\examples{

# match G_1 & G_2 with some known node pairs as seeds
cgnp_pair <- sample_correlated_gnp_pair(n = 10, corr =  0.3, p =  0.5)
g1 <- cgnp_pair$graph1
g2 <- cgnp_pair$graph2
seeds <- 1:10 <= 3

}
